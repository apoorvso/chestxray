{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","image","setImage","useState","preview","setPreview","prediction","setPrediction","fileInputRef","useRef","React","createElement","style","textAlign","marginTop","type","accept","onChange","e","file","target","files","URL","createObjectURL","ref","src","alt","width","onClick","handleRemoveImage","current","value","padding","background","color","border","borderRadius","async","alert","formData","FormData","append","result","axios","post","headers","Content-Type","data","error","console","fontSize","listStyleType","display","labels","map","label","index","key","probabilities","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"6MAoHeA,MAjHf,WACE,MAAOC,EAAOC,GAAYC,mBAAS,OAC5BC,EAASC,GAAcF,mBAAS,OAChCG,EAAYC,GAAiBJ,mBAAS,MACvCK,EAAeC,mBA6CrB,OACEC,IAAAC,cAAA,OAAKC,MAAO,CAAEC,UAAW,SAAUC,UAAW,SAC5CJ,IAAAC,cAAA,UAAI,sCAEJD,IAAAC,cAAA,SACEI,KAAK,OACLC,OAAO,UACPC,SAlDqBC,IACzB,MAAMC,EAAOD,EAAEE,OAAOC,MAAM,GACxBF,IACFjB,EAASiB,GACTd,EAAWiB,IAAIC,gBAAgBJ,IAC/BZ,EAAc,QA8CZiB,IAAKhB,IAGNJ,GACCM,IAAAC,cAAA,OAAKC,MAAO,CAAEE,UAAW,SACvBJ,IAAAC,cAAA,OAAKc,IAAKrB,EAASsB,IAAI,UAAUC,MAAM,UACvCjB,IAAAC,cAAA,WACAD,IAAAC,cAAA,UACEiB,QAlDgBC,KACxB3B,EAAS,MACTG,EAAW,MACXE,EAAc,MAGVC,EAAasB,UACftB,EAAasB,QAAQC,MAAQ,OA4CvBnB,MAAO,CACLE,UAAW,OACXkB,QAAS,WACTC,WAAY,UACZC,MAAO,QACPC,OAAQ,OACRC,aAAc,QAEjB,wBAML1B,IAAAC,cAAA,WACAD,IAAAC,cAAA,UACEiB,QAxDeS,UACnB,IAAKpC,EAEH,YADAqC,MAAM,iCAIR,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQxC,GAExB,IACE,MAIMyC,SAJiBC,IAAMC,KAAK,iCAAkCL,EAAU,CAC5EM,QAAS,CAAEC,eAAgB,0BAGLC,KACxBxC,EAAcmC,GAEd,MAAOM,GACPC,QAAQD,MAAM,yBAA0BA,GACxCV,MAAM,+BAsCJ1B,MAAO,CACLE,UAAW,OACXkB,QAAS,YACTkB,SAAU,OACVd,aAAc,QAEjB,UAIA9B,GACCI,IAAAC,cAAA,OAAKC,MAAO,CAAEE,UAAW,SACvBJ,IAAAC,cAAA,UAAI,kCACJD,IAAAC,cAAA,SACED,IAAAC,cAAA,cAAQ,eAAoB,IAAEL,EAAWA,YAE3CI,IAAAC,cAAA,MAAIC,MAAO,CAAEuC,cAAe,OAAQtC,UAAW,OAAQuC,QAAS,iBAC7D9C,EAAW+C,OAAOC,IAAI,CAACC,EAAOC,IAC7B9C,IAAAC,cAAA,MAAI8C,IAAKD,GACND,EAAM,KAAGjD,EAAWoD,cAAcF,SC7FpCG,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAA5C,EAAA,GAAA6C,KAAAD,EAAAE,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjE,IAAAC,cAACD,IAAMkE,WAAU,KACflE,IAAAC,cAACX,EAAG,QAOR2D","file":"static/js/main.3d5a564b.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [image, setImage] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [prediction, setPrediction] = useState(null);\n  const fileInputRef = useRef(); // To reset <input type=\"file\" />\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setImage(file);\n      setPreview(URL.createObjectURL(file));\n      setPrediction(null);\n    }\n  };\n\n  const handleRemoveImage = () => {\n    setImage(null);\n    setPreview(null);\n    setPrediction(null);\n\n    // Clear the actual file input\n    if (fileInputRef.current) {\n      fileInputRef.current.value = null;\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!image) {\n      alert(\"Please upload an image first.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", image);\n\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/classify\", formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" }\n      });\n\n      const result = response.data;\n      setPrediction(result);\n\n    } catch (error) {\n      console.error(\"Error uploading image:\", error);\n      alert(\"Failed to get prediction.\");\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\n      <h2>üñºÔ∏è Upload an Image</h2>\n  \n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={handleImageChange}\n        ref={fileInputRef}\n      />\n  \n      {preview && (\n        <div style={{ marginTop: \"20px\" }}>\n          <img src={preview} alt=\"preview\" width=\"300px\" />\n          <br />\n          <button\n            onClick={handleRemoveImage}\n            style={{\n              marginTop: \"10px\",\n              padding: \"6px 12px\",\n              background: \"#ff4d4f\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"5px\"\n            }}\n          >\n            ‚ùå Remove Image\n          </button>\n        </div>\n      )}\n  \n      <br />\n      <button\n        onClick={handleSubmit}\n        style={{\n          marginTop: \"20px\",\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          borderRadius: \"5px\"\n        }}\n      >\n        Submit\n      </button>\n  \n      {prediction && (\n        <div style={{ marginTop: \"20px\" }}>\n          <h3>üß† Prediction Result</h3>\n          <p>\n            <strong>Prediction:</strong> {prediction.prediction}\n          </p>\n          <ul style={{ listStyleType: \"disc\", textAlign: \"left\", display: \"inline-block\" }}>\n            {prediction.labels.map((label, index) => (\n              <li key={index}>\n                {label}: {prediction.probabilities[index]}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}